[{"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js":"2","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"3","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js":"4","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js":"5","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js":"7","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js":"12","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js":"13"},{"size":157,"mtime":1611363126334,"results":"14","hashOfConfig":"15"},{"size":2132,"mtime":1611698831097,"results":"16","hashOfConfig":"15"},{"size":1753,"mtime":1611623536946,"results":"17","hashOfConfig":"15"},{"size":157,"mtime":1611363126334,"results":"18","hashOfConfig":"19"},{"size":1897,"mtime":1611368849741,"results":"20","hashOfConfig":"19"},{"size":1753,"mtime":1611366125459,"results":"21","hashOfConfig":"19"},{"size":3986,"mtime":1611698831109,"results":"22","hashOfConfig":"15"},{"size":1964,"mtime":1611623536953,"results":"23","hashOfConfig":"15"},{"size":2542,"mtime":1611698831107,"results":"24","hashOfConfig":"15"},{"size":1535,"mtime":1611623536949,"results":"25","hashOfConfig":"15"},{"size":3187,"mtime":1611698831102,"results":"26","hashOfConfig":"15"},{"size":3173,"mtime":1611698831104,"results":"27","hashOfConfig":"15"},{"size":3750,"mtime":1611698831100,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"a9h0ta",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etbsd9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],["60","61"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",["62","63","64"],"import React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { Nav } from 'react-bootstrap'\nimport { NavDropdown } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\n\nexport default function NavBar(props) {\n    return (\n        <Navbar expand=\"lg-md-sm\" style={{ backgroundColor: \"silver\" }}>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            {/* <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n            <Navbar.Brand href=\"/\">조리법!</Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {props.isLoggedIn ?\n                        <Nav.Link onClick={props.handleLogOut}>로그 아웃</Nav.Link>\n                        :\n                        <Nav.Link href=\"/signin\">로그인</Nav.Link>\n                    }\n                    <Nav.Link href=\"/recipeform\">Add new recipe</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",["65","66","67"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js",["68","69"],"import React, { useState, useEffect } from 'react'\nimport API from '../../utils/API'\nimport SignInForm from '../../components/SignInForm'\n\nexport default function SignInPage() {\n    const [loginFormState, setLoginFormState] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const [profileState, setProfileState] = useState({\n        name: \"\",\n        email: \"\",\n        recipes: [],\n        token: \"\",\n        id: \"\",\n        isLoggedIn: false\n    })\n\n    const handleInputChange = event => {\n        const { name, value } = event.target\n        setLoginFormState({\n            ...loginFormState,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (!loginFormState.email || !loginFormState.password) {\n            alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n        } else {\n            API.login(loginFormState).then(newToken => {\n                if (newToken === null) {\n                    alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n                } else {\n                    localStorage.setItem(\"token\", newToken.token)\n                    API.getProfile(newToken.token).then(profileData => {\n                        setProfileState({\n                            name: profileData.name,\n                            email: profileData.email,\n                            id: profileData.id,\n                            isLoggedIn: true\n                        })\n                    }).then(res => {\n                        window.location.href = \"/\"\n                    })\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n            <SignInForm \n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                name={loginFormState.name}\n                email={loginFormState.email}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js",["70","71","72"],"import React, { useState, useEffect } from 'react'\n// import { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport RecipeForm from '../../components/RecipeForm'\n\nexport default function RecipePage(props) {\n    // -----------------States-----------------\n    const [recipeState, setRecipeState] = useState({\n        recipeName: \"\",\n        recipeImage: \"\"\n    });\n    const [imgLoadingState, setImgLoadingState] = useState(false);\n\n    useEffect(() => {\n\n    }, [])\n    // -----------------Input changes-----------------\n    const handleRecipeInputChange = event => {\n        const { name, value } = event.target\n        setRecipeState({\n            ...recipeState,\n            [name]: value\n        })\n    };\n    const handleUploadImgBtn = event => {\n        event.preventDefault()\n        document.getElementById('uploadImg').click()\n    };\n    const handleUploadImg = async event => {\n        event.preventDefault()\n        const files = event.target.files\n        const data = new FormData()\n        data.append('file', files[0])\n        data.append('upload_preset', 'ummas_cb')\n        setImgLoadingState(true)\n        const res = await API.uploadImage(data)\n        const file = await res.json()\n        setRecipeState({\n            ...recipeState,\n            recipeImage: file.secure_url\n        })\n        setImgLoadingState(false)\n    };\n    // -----------------Form Submit-----------------\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (props.profile.isLoggedIn === true) {\n            API.createRecipe(props.profile.token, {\n                ...recipeState,\n            }).then(afterCreate => {\n                API.getRecipes().then(res => {\n                    let recipeId = res.slice(-1)[0].id\n                    window.location.href = `/ingredientform/${recipeId}`\n                }\n                )\n            })\n        } else {\n            alert(\"Sign in to add new recipe\")\n        }\n        // API.createIngredients(props.profile.token, {\n        //     ...ingredientState,\n\n        // })\n    }\n\n    return (\n        <div>\n            <RecipeForm\n                handleRecipeInputChange={handleRecipeInputChange}\n                handleFormSubmit={handleFormSubmit}\n                handleUploadImgBtn={handleUploadImgBtn}\n                handleUploadImg={handleUploadImg}\n                recipeName={recipeState.recipeName}\n                recipeImage={recipeState.recipeImage}\n                loading={imgLoadingState}\n            />\n        </div>\n    );\n};\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js",["73"],"import { Card } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\n\nexport default function RecipeForm(props) {\n\n    return (\n        <Card className=\"SignInCard\">\n            <Card.Body>\n                <Card.Title style={{ textAlign: \"center\" }}>Add Recipe</Card.Title>\n                <Card.Text>\n                    <Form onSubmit={props.handleFormSubmit}>\n                        <Form.Group>\n                            {props.loading ? (\n                                <h3 style={{ textAlign: \"center\" }}><strong>Loading Image...</strong></h3>\n                            ) : (\n                                    <Image\n                                        src={\n                                            props.recipeImage ?\n                                                (props.recipeImage)\n                                                : null\n                                        }\n                                        style={\n                                            props.recipeImage ?\n                                                ({\n                                                    maxWidth: \"300px\",\n                                                    height: \"auto\",\n                                                    margin: \"0 auto\"\n                                                })\n                                                : null\n                                        }\n                                    />\n                                )}\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Recipe Name\"\n                                onChange={props.handleRecipeInputChange}\n                                value={props.recipeName}\n                                name=\"recipeName\"\n                            />\n                        </Form.Group>\n                        <Button\n                            type=\"button\"\n                            onClick={props.handleUploadImgBtn}\n                            style={{ width: \"100%\", marginBottom: \"10px\" }}\n                        >\n                            Upload Image\n                         </Button>\n                        <Form.Group>\n                            <Form.File\n                                id=\"uploadImg\"\n                                onChange={props.handleUploadImg}\n                                style={{ display: \"none\" }}\n                                name=\"recipeImage\"\n                            />\n                            <Button\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{width:\"100%\"}}\n                            >\n                                Add Ingredients\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":21},{"ruleId":"78","severity":1,"message":"83","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":21},{"ruleId":"78","severity":1,"message":"83","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"85","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":24},{"ruleId":"78","severity":1,"message":"86","line":23,"column":12,"nodeType":"80","messageId":"81","endLine":23,"endColumn":23},{"ruleId":"78","severity":1,"message":"87","line":23,"column":25,"nodeType":"80","messageId":"81","endLine":23,"endColumn":39},{"ruleId":"78","severity":1,"message":"88","line":25,"column":13,"nodeType":"80","messageId":"81","endLine":25,"endColumn":15},{"ruleId":"78","severity":1,"message":"89","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":13},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'profileState' is assigned a value but never used.","'userProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.","'id' is assigned a value but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]