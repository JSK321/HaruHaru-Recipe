[{"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js":"2","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"3","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js":"4","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js":"5","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js":"7","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js":"12","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js":"17"},{"size":157,"mtime":1611363126334,"results":"18","hashOfConfig":"19"},{"size":2412,"mtime":1611784142790,"results":"20","hashOfConfig":"19"},{"size":1455,"mtime":1611784195884,"results":"21","hashOfConfig":"19"},{"size":157,"mtime":1611363126334,"results":"22","hashOfConfig":"23"},{"size":1897,"mtime":1611368849741,"results":"24","hashOfConfig":"23"},{"size":1753,"mtime":1611366125459,"results":"25","hashOfConfig":"23"},{"size":3986,"mtime":1611700441380,"results":"26","hashOfConfig":"19"},{"size":1964,"mtime":1611623536953,"results":"27","hashOfConfig":"19"},{"size":2524,"mtime":1611707391074,"results":"28","hashOfConfig":"19"},{"size":1535,"mtime":1611623536949,"results":"29","hashOfConfig":"19"},{"size":3675,"mtime":1611700068203,"results":"30","hashOfConfig":"19"},{"size":3173,"mtime":1611699373486,"results":"31","hashOfConfig":"19"},{"size":3748,"mtime":1611783136271,"results":"32","hashOfConfig":"19"},{"size":1936,"mtime":1611705684824,"results":"33","hashOfConfig":"19"},{"size":2481,"mtime":1611781604074,"results":"34","hashOfConfig":"19"},{"size":2567,"mtime":1611784729623,"results":"35","hashOfConfig":"19"},{"size":775,"mtime":1611779457478,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"a9h0ta",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etbsd9",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],["75","76"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",["77","78","79"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js",["80","81"],"import React, { useState, useEffect } from 'react'\nimport API from '../../utils/API'\nimport SignInForm from '../../components/SignInForm'\n\nexport default function SignInPage() {\n    const [loginFormState, setLoginFormState] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const [profileState, setProfileState] = useState({\n        name: \"\",\n        email: \"\",\n        recipes: [],\n        token: \"\",\n        id: \"\",\n        isLoggedIn: false\n    })\n\n    const handleInputChange = event => {\n        const { name, value } = event.target\n        setLoginFormState({\n            ...loginFormState,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (!loginFormState.email || !loginFormState.password) {\n            alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n        } else {\n            API.login(loginFormState).then(newToken => {\n                if (newToken === null) {\n                    alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n                } else {\n                    localStorage.setItem(\"token\", newToken.token)\n                    API.getProfile(newToken.token).then(profileData => {\n                        setProfileState({\n                            name: profileData.name,\n                            email: profileData.email,\n                            id: profileData.id,\n                            isLoggedIn: true\n                        })\n                    }).then(res => {\n                        window.location.href = \"/\"\n                    })\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n            <SignInForm \n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                name={loginFormState.name}\n                email={loginFormState.email}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js",["82"],"import { Card } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\n\nexport default function RecipeForm(props) {\n\n    return (\n        <Card className=\"SignInCard\">\n            <Card.Body>\n                <Card.Title style={{ textAlign: \"center\" }}>Add Recipe</Card.Title>\n                <Card.Text>\n                    <Form onSubmit={props.handleFormSubmit}>\n                        <Form.Group>\n                            {props.loading ? (\n                                <h3 style={{ textAlign: \"center\" }}><strong>Loading Image...</strong></h3>\n                            ) : (\n                                    <Image\n                                        src={\n                                            props.recipeImage ?\n                                                (props.recipeImage)\n                                                : null\n                                        }\n                                        style={\n                                            props.recipeImage ?\n                                                ({\n                                                    maxWidth: \"300px\",\n                                                    height: \"auto\",\n                                                    margin: \"0 auto\"\n                                                })\n                                                : null\n                                        }\n                                    />\n                                )}\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Recipe Name\"\n                                onChange={props.handleRecipeInputChange}\n                                value={props.recipeName}\n                                name=\"recipeName\"\n                            />\n                        </Form.Group>\n                        <Button\n                            type=\"button\"\n                            onClick={props.handleUploadImgBtn}\n                            style={{ width: \"100%\", marginBottom: \"10px\" }}\n                        >\n                            Upload Image\n                         </Button>\n                        <Form.Group>\n                            <Form.File\n                                id=\"uploadImg\"\n                                onChange={props.handleUploadImg}\n                                style={{ display: \"none\" }}\n                                name=\"recipeImage\"\n                            />\n                            <Button\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{width:\"100%\"}}\n                            >\n                                Add Ingredients\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js",["83"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport RecipeCard from '../../components/RecipeCard'\n\nexport default function RecipeCardPage() {\n    const [recipeState, setRecipeState] = useState({\n        recipeName: \"\",\n        recipeDescript: \"\",\n        recipeImage: \"\"\n    });\n    const [ingredientState, setIngredientState] = useState({\n        item: []\n    });\n    const [directionState, setDirectionState] = useState({\n        directions: \"\",\n    });\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchData()\n        fetchIngreData()\n    }, [])\n\n    function fetchData() {\n        API.getOneRecipe(id).then(data => {\n            if (data !== null && data !== undefined) {\n                setRecipeState({\n                    recipeName: data.recipeName,\n                    recipeDescript: data.recipeDescript,\n                    recipeImage: data.recipeImage\n                })\n                setDirectionState({\n                    directions: data.Steps[0].directions\n                })\n            }\n        })\n    }\n\n    function fetchIngreData() {\n        API.getAllIngreForRecipe(id).then(data => {\n            if (data !== null && data !== undefined) {\n                setIngredientState({\n                    item: data\n                })\n            }\n        })\n    }\n\n    return (\n        <div>\n            <RecipeCard\n                recipeName={recipeState.recipeName}\n                recipeDescript={recipeState.recipeDescript}\n                recipeImage={recipeState.recipeImage}\n                ingredient={ingredientState.ingredient}\n                ingredientQuant={ingredientState.ingredientQuant}\n                ingredientUnit={ingredientState.ingredientUnit}\n                directions={directionState.directions}\n                ingredients={ingredientState.item}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js",["84"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":21},{"ruleId":"89","severity":1,"message":"94","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":16},{"ruleId":"89","severity":1,"message":"95","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"96","line":11,"column":12,"nodeType":"91","messageId":"92","endLine":11,"endColumn":24},{"ruleId":"89","severity":1,"message":"97","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":23,"column":8,"nodeType":"100","endLine":23,"endColumn":10,"suggestions":"101"},{"ruleId":"89","severity":1,"message":"102","line":11,"column":12,"nodeType":"91","messageId":"92","endLine":11,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'profileState' is assigned a value but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchIngreData'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'searchState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [fetchData, fetchIngreData]",{"range":"108","text":"109"},[670,672],"[fetchData, fetchIngreData]"]