[{"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js":"2","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"3","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js":"4","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js":"5","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js":"7","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js":"12","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js":"17","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignUpPage\\index.js":"18","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignUpForm\\index.js":"19","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\ProfilePage\\index.js":"20","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UpdateRecipePage\\index.js":"21","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UpdateRecipeForm\\index.js":"22","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UserProfile\\index.js":"23","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UserProfilePage\\index.js":"24","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\CategoryPage\\index.js":"25","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\EditProfilePage\\index.js":"26","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\NoPage\\index.js":"27","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NoPageCard\\index.js":"28","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\OtherUsersProfile\\index.js":"29","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\EditProfileForm\\index.js":"30","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\LogInModal\\index.js":"31","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\AddMoreIngrePage\\index.js":"32","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\AddIngreForm\\index.js":"33"},{"size":157,"mtime":1612306958667,"results":"34","hashOfConfig":"35"},{"size":4314,"mtime":1612927939024,"results":"36","hashOfConfig":"35"},{"size":2973,"mtime":1612919934230,"results":"37","hashOfConfig":"35"},{"size":157,"mtime":1611363126334,"results":"38","hashOfConfig":"39"},{"size":1897,"mtime":1611368849741,"results":"40","hashOfConfig":"39"},{"size":1753,"mtime":1611366125459,"results":"41","hashOfConfig":"39"},{"size":14272,"mtime":1612990633394,"results":"42","hashOfConfig":"35"},{"size":2196,"mtime":1612898192058,"results":"43","hashOfConfig":"35"},{"size":2866,"mtime":1612487658950,"results":"44","hashOfConfig":"35"},{"size":1955,"mtime":1612919934241,"results":"45","hashOfConfig":"35"},{"size":4649,"mtime":1612919934238,"results":"46","hashOfConfig":"35"},{"size":3173,"mtime":1611797435625,"results":"47","hashOfConfig":"35"},{"size":4444,"mtime":1612919934225,"results":"48","hashOfConfig":"35"},{"size":4903,"mtime":1612990563440,"results":"49","hashOfConfig":"35"},{"size":5857,"mtime":1612990510247,"results":"50","hashOfConfig":"35"},{"size":2951,"mtime":1612987652649,"results":"51","hashOfConfig":"35"},{"size":887,"mtime":1612919934239,"results":"52","hashOfConfig":"35"},{"size":1944,"mtime":1612898192059,"results":"53","hashOfConfig":"35"},{"size":2674,"mtime":1612919934243,"results":"54","hashOfConfig":"35"},{"size":2734,"mtime":1612988538423,"results":"55","hashOfConfig":"35"},{"size":6863,"mtime":1612919934256,"results":"56","hashOfConfig":"35"},{"size":8953,"mtime":1612936813997,"results":"57","hashOfConfig":"35"},{"size":8868,"mtime":1612987762558,"results":"58","hashOfConfig":"35"},{"size":1023,"mtime":1612898192062,"results":"59","hashOfConfig":"35"},{"size":3204,"mtime":1612987668240,"results":"60","hashOfConfig":"35"},{"size":4036,"mtime":1612988568791,"results":"61","hashOfConfig":"35"},{"size":399,"mtime":1612898192054,"results":"62","hashOfConfig":"35"},{"size":990,"mtime":1612919934233,"results":"63","hashOfConfig":"35"},{"size":4168,"mtime":1612987752958,"results":"64","hashOfConfig":"35"},{"size":5233,"mtime":1612988145862,"results":"65","hashOfConfig":"35"},{"size":2086,"mtime":1612919934227,"results":"66","hashOfConfig":"35"},{"size":2681,"mtime":1612919934249,"results":"67","hashOfConfig":"35"},{"size":3863,"mtime":1612919934222,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"a9h0ta",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etbsd9",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],["140","141"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",["142","143","144"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js",["145","146"],"import React, { useState, useEffect } from 'react'\nimport API from '../../utils/API'\nimport SignInForm from '../../components/SignInForm'\n\nexport default function SignInPage() {\n    const [loginFormState, setLoginFormState] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const [profileState, setProfileState] = useState({\n        name: \"\",\n        accountName:\"\",\n        email: \"\",\n        recipes: [],\n        token: \"\",\n        id: \"\",\n        isLoggedIn: false\n    })\n\n    const handleInputChange = event => {\n        const { name, value } = event.target\n        setLoginFormState({\n            ...loginFormState,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (!loginFormState.email || !loginFormState.password) {\n            alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n        } else {\n            API.login(loginFormState).then(newToken => {\n                if (newToken === null) {\n                    alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n                } else {\n                    localStorage.setItem(\"token\", newToken.token)\n                    API.getProfile(newToken.token).then(profileData => {\n                        setProfileState({\n                            name: profileData.name,\n                            accountName: profileData.accountName,\n                            email: profileData.email,\n                            id: profileData.id,\n                            isLoggedIn: true\n                        })\n                    }).then(res => {\n                        window.location.href = \"/\"\n                    })\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n            <SignInForm \n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                name={loginFormState.name}\n                email={loginFormState.email}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js",["147","148"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js",["149"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js",["150","151"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignUpPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignUpForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UpdateRecipePage\\index.js",["152","153","154","155","156","157"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport UpdateRecipeForm from '../../components/UpdateRecipeForm'\n\nexport default function UpdateRecipePage(props) {\n    const [recipeState, setRecipeState] = useState({\n        recipeName: \"\",\n        recipeCategory: \"\",\n        recipeDescript: \"\",\n        recipeImage: \"\"\n    })\n    const [ingredientState, setIngredientState] = useState({\n        data: []\n    })\n    const [directionState, setDirectionState] = useState({\n        directions: \"\"\n    })\n    const [recipeIngreState, setRecipeIngreState] = useState({\n        item: []\n    })\n    const [imgLoadingState, setImgLoadingState] = useState(false)\n\n    const { id } = useParams();\n\n\n    useEffect(() => {\n        fetchRecipeData()\n    }, [])\n\n    function fetchRecipeData() {\n        API.getAllIngreForRecipe(id).then(data => {\n            setRecipeIngreState({\n                item: data\n            })\n        })\n        API.getOneRecipe(id).then(data => {\n            if (data !== null && data !== undefined) {\n                setRecipeState({\n                    recipeName: data.recipeName,\n                    recipeCategory: data.recipeCategory,\n                    recipeDescript: data.recipeDescript,\n                    recipeImage: data.recipeImage,\n                    recipeId: id,\n                    ownerId: data.UserId\n                })\n                setDirectionState({\n                    directions: data.Steps[0].directions,\n                    RecipeId: data.Steps[0].RecipeId,\n                    UserId: data.Steps[0].UserId,\n                })\n            }\n        })\n    }\n\n    const handleRecipeInputChange = event => {\n        const { name, value } = event.target\n        setRecipeState({\n            ...recipeState,\n            [name]: value\n        })\n    }\n\n    const handleSelectCategory = event => {\n        let category = event.target.value\n        setRecipeState({\n            ...recipeState,\n            recipeCategory: category\n        })\n    };\n\n    const handleIngreInputChange = event => {\n        let id = event.target.id\n        const { value } = event.target\n        let data = recipeIngreState.item\n        let index = data.findIndex(obj => obj.id == id)\n        data[index].ingredient = value\n        setIngredientState({ data })\n\n    };\n\n    const handleIngreQuantInputChange = event => {\n        let id = event.target.id\n        const { value } = event.target\n        let data = recipeIngreState.item\n        let index = data.findIndex(obj => obj.id == id)\n        data[index].ingredientQuant = value\n        // console.log({ data })\n        setIngredientState({ data })\n    }\n\n    const handleIngreUnitInputChange = event => {\n        let id = event.target.id\n        const { value } = event.target\n        let data = recipeIngreState.item\n        let index = data.findIndex(obj => obj.id == id)\n        data[index].ingredientUnit = value\n        // console.log({ data })\n        setIngredientState({ data })\n\n    }\n\n    const handleDirectInputChange = event => {\n        const { name, value } = event.target\n        setDirectionState({\n            ...directionState,\n            [name]: value\n        })\n    };\n\n    const handleIngreSetButton = event => {\n        event.preventDefault()\n        let id = event.target.id\n        let index = ingredientState.data.findIndex(obj => obj.id == id)\n        let updateIngre = ingredientState.data[index]\n        API.updateOneIngre(\n            props.profile.token,\n            updateIngre.id,\n            updateIngre.ingredient,\n            updateIngre.ingredientQuant,\n            updateIngre.ingredientUnit\n        )\n    }\n\n    const handleIngreDeleteButton = event => {\n        event.preventDefault()\n        let id = event.target.id\n        let index = recipeIngreState.item.findIndex(obj => obj.id == id)\n        let ingre = recipeIngreState.item[index]\n        const token = localStorage.getItem(\"token\")\n        let confirmAlert = window.confirm(`Are you certain to delete ${ingre.ingredient}?`)\n        let closeBtnId = event.currentTarget.id\n        if (confirmAlert === true) {\n            API.deleteIngredient(token, closeBtnId)\n        }\n    }\n\n    const handleUploadImgBtn = event => {\n        event.preventDefault()\n        document.getElementById('uploadImg').click()\n    };\n\n    const handleUploadImg = async event => {\n        event.preventDefault()\n        const files = event.target.files\n        const data = new FormData()\n        data.append('file', files[0])\n        data.append('upload_preset', 'ummas_cb')\n        setImgLoadingState(true)\n        const res = await API.uploadImage(data)\n        const file = await res.json()\n        setRecipeState({\n            ...recipeState,\n            recipeImage: file.secure_url\n        })\n        setImgLoadingState(false)\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        API.updateRecipe(\n            props.profile.token,\n            id,\n            recipeState.recipeName,\n            recipeState.recipeDescript,\n            recipeState.recipeCategory,\n            recipeState.recipeImage,\n        )\n\n        API.updateDirection(\n            props.profile.token,\n            id,\n            directionState.directions,\n        )\n\n        API.updateSavedRecipe(\n            props.profile.token,\n            id,\n            recipeState.recipeName\n        )\n\n        window.location.href = `/recipe/${id}/${recipeState.recipeName}`\n    }\n\n    return (\n        <div>\n            <UpdateRecipeForm\n                //Recipe\n                recipeId={id}\n                recipeName={recipeState.recipeName}\n                recipeCategory={recipeState.recipeCategory}\n                recipeDescript={recipeState.recipeDescript}\n                recipeImage={recipeState.recipeImage}\n                loading={imgLoadingState}\n                // Ingredients\n                ingredients={recipeIngreState.item}\n                // Directions\n                directions={directionState.directions}\n                // Input Changes\n                handleRecipeInputChange={handleRecipeInputChange}\n                handleSelectCategory={handleSelectCategory}\n                handleIngreInputChange={handleIngreInputChange}\n                handleIngreQuantInputChange={handleIngreQuantInputChange}\n                handleIngreUnitInputChange={handleIngreUnitInputChange}\n                handleDirectInputChange={handleDirectInputChange}\n                // Button clicks\n                handleUploadImgBtn={handleUploadImgBtn}\n                handleUploadImg={handleUploadImg}\n                handleIngreSetButton={handleIngreSetButton}\n                handleIngreDeleteButton={handleIngreDeleteButton}\n                handleFormSubmit={handleFormSubmit}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UpdateRecipeForm\\index.js",["158"],"import React from 'react'\nimport './styles.css'\nimport { Link } from \"react-router-dom\"\nimport { Card } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\n\nexport default function UpdateRecipeForm(props) {\n    return (\n        <Card className=\"updateRecipeCard\">\n            <Card.Body>\n                <Card.Title className=\"updateRecipeTitle\"><strong>Update Recipe!</strong></Card.Title>\n                <Form onSubmit={props.handleFormSubmit}>\n                    <Form.Group>\n                        {props.loading ? (\n                            <h3 style={{ textAlign: \"center\", color: \"midnightblue\" }}><strong>Loading Image...</strong></h3>\n                        )\n                            :\n                            (\n                                <Image\n                                    src={\n                                        props.recipeImage ?\n                                            (props.recipeImage)\n                                            : null\n                                    }\n                                    className=\"recipeImageUpdate\"\n                                />\n                            )}\n                    </Form.Group>\n                    <Row noGutters>\n                        <Col xs={8}>\n                            <Form.Control\n                                placeholder={props.recipeName !== \"\" ? props.recipeName : \"Recipe Name\"}\n                                onChange={props.handleRecipeInputChange}\n                                name=\"recipeName\"\n                                className=\"updateRecipeFormControl\"\n                            />\n                        </Col>\n                        <Col xs={4}>\n                            <Form.Control\n                                as=\"select\"\n                                onChange={props.handleSelectCategory}\n                                name=\"recipeCategory\"\n                                className=\"updateRecipeFormControl\"\n                            >\n                                <option selected disabled value=\"\">Category</option>\n                                <option>Breakfast</option>\n                                <option>Lunch</option>\n                                <option>Dinner</option>\n                                {/* <option>Dessert</option> */}\n                                <option>Soup/Stew</option>\n                                {/* <option>Snack</option> */}\n                                <option>Other</option>\n                            </Form.Control>\n                        </Col>\n                    </Row>\n                    <Form.Group className=\"updateRecipeDescript\">\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={2}\n                            placeholder={props.recipeDescript !== \"\" ? props.recipeDescript : \"Recipe Description\"}\n                            onChange={props.handleRecipeInputChange}\n                            name=\"recipeDescript\"\n                            className=\"updateRecipeFormControl\"\n                        />\n                    </Form.Group>\n                    <Form.Text className=\"addIngreTextHelp\">\n                        <strong> Press Set for each ingredient to update.</strong>\n                    </Form.Text>\n                    <Form.Group>\n                        {props.ingredients !== undefined ?\n                            props.ingredients.map(item => (\n                                <Row noGutters>\n                                    <Col xs={5}>\n                                        <Form.Control\n                                            placeholder={item.ingredient !== \"\" ? item.ingredient : \"Ingredient\"}\n                                            type=\"text\"\n                                            name=\"ingredient\"\n                                            className=\"updateRecipeFormControl\"\n                                            onChange={props.handleIngreInputChange}\n                                            id={item.id}\n                                            recipeId={item.RecipeId}\n                                        >\n                                        </Form.Control>\n                                    </Col>\n                                    <Col xs={2}>\n                                        <Form.Control\n                                            placeholder={item.ingredientQuant !== \"\" ? item.ingredientQuant : \"Quanity\"}\n                                            type=\"number\"\n                                            min=\"0\"\n                                            name=\"ingredientQuant\"\n                                            className=\"updateRecipeFormControl\"\n                                            onChange={props.handleIngreQuantInputChange}\n                                            id={item.id}\n                                            recipeId={item.RecipeId}\n                                        />\n                                    </Col>\n                                    <Col xs={2}>\n                                        <Form.Control\n                                            placeholder={item.ingredientUnit !== \"\" ? item.ingredientUnit : \"Unit\"}\n                                            type=\"text\"\n                                            name=\"ingredientUnit\"\n                                            className=\"updateRecipeFormControl\"\n                                            onChange={props.handleIngreUnitInputChange}\n                                            id={item.id}\n                                            recipeId={item.RecipeId}\n                                        />\n                                    </Col>\n                                    <Col xs={2}>\n                                        <Button\n                                            className=\"updateIngreSetBtn\"\n                                            onClick={props.handleIngreSetButton}\n                                            id={item.id}\n                                        >\n                                            <strong id={item.id}>Set</strong>\n                                        </Button>\n                                    </Col>\n                                    <Col xs={1}>\n                                        <Button\n                                            className=\"ingreDeleteBtn\"\n                                            onClick={props.handleIngreDeleteButton}\n                                            id={item.id}\n                                            name={item.ingredient}\n                                        >\n                                            <strong id={item.id}>X</strong>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            ))\n                            :\n                            null\n                        }\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={2}\n                            placeholder={props.directions !== \"\" ? props.directions : \"Recipe Directions\"}\n                            onChange={props.handleDirectInputChange}\n                            name=\"directions\"\n                            className=\"updateRecipeFormControl\"\n                        />\n                    </Form.Group>\n\n                    <Button\n                        // type=\"button\"\n                        className=\"updateFormButton\"\n                        onClick={props.handleUploadImgBtn}\n                    >\n                        Update Image\n                         </Button>\n                    {/* Hidden upload button for css */}\n                    <Form.File\n                        id=\"uploadImg\"\n                        onChange={props.handleUploadImg}\n                        style={{ display: \"none\" }}\n                        name=\"recipeImage\"\n                    />\n\n                    <Button\n                        // type=\"button\"\n                        className=\"addIngreButton\"\n                        href={`/addingredientform/${props.recipeId}`}\n                    >\n                        Add more ingredients\n                    </Button>\n                    <Button\n                        variant=\"primary\"\n                        className=\"updateFormButton\"\n                        type=\"submit\"\n                    >\n                        Update\n                    </Button>\n\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UserProfile\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UserProfilePage\\index.js",["159"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport OtherUsersProfile from '../../components/OtherUsersProfile'\n\nexport default function UserProfilePage() {\n    const [userState, setUserState] = useState({\n        name: \"\",\n        accountName: \"\",\n        email: \"\",\n        profileImage: \"\",\n    })\n\n    const { accountName } = useParams();\n\n    useEffect(() => {\n        fetchUserData()\n    }, [])\n\n    function fetchUserData() {\n        API.getOneProfile(accountName).then(data => {\n            setUserState({\n                name: data.name,\n                accountName: data.accountName,\n                email: data.email,\n                profileImage: data.profileImage,\n            })\n        })\n    }\n\n    return (\n        <OtherUsersProfile\n            name={userState.name}\n            accountName={userState.accountName}\n            email={userState.email}\n            profileImage={userState.profileImage}\n        />\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\CategoryPage\\index.js",["160"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\EditProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\NoPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NoPageCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\OtherUsersProfile\\index.js",["161"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\EditProfileForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\LogInModal\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\AddMoreIngrePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\AddIngreForm\\index.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"173","line":11,"column":12,"nodeType":"168","messageId":"169","endLine":11,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":37,"column":8,"nodeType":"176","endLine":37,"endColumn":10,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":79,"column":22,"nodeType":"180","messageId":"181","endLine":79,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":74,"column":104,"nodeType":"180","messageId":"181","endLine":74,"endColumn":106},{"ruleId":"166","severity":1,"message":"182","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":25},{"ruleId":"166","severity":1,"message":"183","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":18},{"ruleId":"174","severity":1,"message":"184","line":29,"column":8,"nodeType":"176","endLine":29,"endColumn":10,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"186","line":76,"column":50,"nodeType":"180","messageId":"181","endLine":76,"endColumn":52},{"ruleId":"178","severity":1,"message":"186","line":86,"column":50,"nodeType":"180","messageId":"181","endLine":86,"endColumn":52},{"ruleId":"178","severity":1,"message":"186","line":96,"column":50,"nodeType":"180","messageId":"181","endLine":96,"endColumn":52},{"ruleId":"178","severity":1,"message":"186","line":114,"column":66,"nodeType":"180","messageId":"181","endLine":114,"endColumn":68},{"ruleId":"178","severity":1,"message":"186","line":128,"column":67,"nodeType":"180","messageId":"181","endLine":128,"endColumn":69},{"ruleId":"166","severity":1,"message":"187","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"188","line":18,"column":8,"nodeType":"176","endLine":18,"endColumn":10,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"190","line":25,"column":8,"nodeType":"176","endLine":25,"endColumn":10,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"192","line":26,"column":8,"nodeType":"176","endLine":26,"endColumn":10,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'profileState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData', 'fetchIngreData', and 'fetchSavedRecipes'. Either include them or remove the dependency array.","ArrayExpression",["196"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FontAwesomeIcon' is defined but never used.","'faSearch' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchRecipeData'. Either include it or remove the dependency array.",["197"],"Expected '===' and instead saw '=='.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["198"],"React Hook useEffect has a missing dependency: 'fetchDinnerRecipeInfo'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'fetchRecipeInfo'. Either include it or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [fetchData, fetchIngreData, fetchSavedRecipes]",{"range":"211","text":"212"},"Update the dependencies array to be: [fetchRecipeData]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchUserData]",{"range":"215","text":"216"},"Update the dependencies array to be: [fetchDinnerRecipeInfo]",{"range":"217","text":"218"},"Update the dependencies array to be: [fetchRecipeInfo]",{"range":"219","text":"220"},[1022,1024],"[fetchData, fetchIngreData, fetchSavedRecipes]",[827,829],"[fetchRecipeData]",[482,484],"[fetchUserData]",[750,752],"[fetchDinnerRecipeInfo]",[784,786],"[fetchRecipeInfo]"]