[{"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js":"1","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js":"2","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"3","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js":"4","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js":"5","C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js":"6","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js":"7","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js":"8","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js":"9","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js":"10","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js":"11","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js":"12","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js":"13","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js":"14","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js":"15","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js":"16","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js":"17","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignUpPage\\index.js":"18","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignUpForm\\index.js":"19","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\ProfilePage\\index.js":"20","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UpdateRecipePage\\index.js":"21","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UpdateRecipeForm\\index.js":"22","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UserProfile\\index.js":"23","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\LogInModal\\index.js":"24","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\EditProfilePage\\index.js":"25","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\EditProfileForm\\index.js":"26","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UserProfilePage\\index.js":"27","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\OtherUsersProfile\\index.js":"28","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\CategorPage\\index.js":"29"},{"size":157,"mtime":1612306958667,"results":"30","hashOfConfig":"31"},{"size":4920,"mtime":1612819918356,"results":"32","hashOfConfig":"31"},{"size":2691,"mtime":1612819833979,"results":"33","hashOfConfig":"31"},{"size":157,"mtime":1611363126334,"results":"34","hashOfConfig":"35"},{"size":1897,"mtime":1611368849741,"results":"36","hashOfConfig":"35"},{"size":1753,"mtime":1611366125459,"results":"37","hashOfConfig":"35"},{"size":12075,"mtime":1612817562523,"results":"38","hashOfConfig":"31"},{"size":2196,"mtime":1612493176860,"results":"39","hashOfConfig":"31"},{"size":2866,"mtime":1612487658950,"results":"40","hashOfConfig":"31"},{"size":1966,"mtime":1612747909721,"results":"41","hashOfConfig":"31"},{"size":4517,"mtime":1612819721762,"results":"42","hashOfConfig":"31"},{"size":3173,"mtime":1611797435625,"results":"43","hashOfConfig":"31"},{"size":4009,"mtime":1612747909714,"results":"44","hashOfConfig":"31"},{"size":4067,"mtime":1612818067547,"results":"45","hashOfConfig":"31"},{"size":4369,"mtime":1612752600495,"results":"46","hashOfConfig":"31"},{"size":2967,"mtime":1612487658945,"results":"47","hashOfConfig":"31"},{"size":769,"mtime":1612817387305,"results":"48","hashOfConfig":"31"},{"size":1944,"mtime":1612746774700,"results":"49","hashOfConfig":"31"},{"size":2634,"mtime":1612747909724,"results":"50","hashOfConfig":"31"},{"size":2740,"mtime":1612742843677,"results":"51","hashOfConfig":"31"},{"size":5575,"mtime":1612487658959,"results":"52","hashOfConfig":"31"},{"size":7651,"mtime":1612487658940,"results":"53","hashOfConfig":"31"},{"size":8251,"mtime":1612818014720,"results":"54","hashOfConfig":"31"},{"size":1576,"mtime":1612578035265,"results":"55","hashOfConfig":"31"},{"size":4036,"mtime":1612578035277,"results":"56","hashOfConfig":"31"},{"size":5145,"mtime":1612648765155,"results":"57","hashOfConfig":"31"},{"size":1023,"mtime":1612815467873,"results":"58","hashOfConfig":"31"},{"size":4005,"mtime":1612817506618,"results":"59","hashOfConfig":"31"},{"size":3243,"mtime":1612818990487,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"a9h0ta",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etbsd9",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],["125","126"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\index.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\App.js",[],"C:\\Users\\JaeShin\\Code\\personal\\ummas-cb\\ummacb\\src\\components\\NavBar\\index.js",["127","128","129"],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\utils\\API.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignInPage\\index.js",["130","131"],"import React, { useState, useEffect } from 'react'\nimport API from '../../utils/API'\nimport SignInForm from '../../components/SignInForm'\n\nexport default function SignInPage() {\n    const [loginFormState, setLoginFormState] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const [profileState, setProfileState] = useState({\n        name: \"\",\n        accountName:\"\",\n        email: \"\",\n        recipes: [],\n        token: \"\",\n        id: \"\",\n        isLoggedIn: false\n    })\n\n    const handleInputChange = event => {\n        const { name, value } = event.target\n        setLoginFormState({\n            ...loginFormState,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (!loginFormState.email || !loginFormState.password) {\n            alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n        } else {\n            API.login(loginFormState).then(newToken => {\n                if (newToken === null) {\n                    alert(\"잘못된 비밀번호 / 이메일을 다시 시도하십시오.\")\n                } else {\n                    localStorage.setItem(\"token\", newToken.token)\n                    API.getProfile(newToken.token).then(profileData => {\n                        setProfileState({\n                            name: profileData.name,\n                            accountName: profileData.accountName,\n                            email: profileData.email,\n                            id: profileData.id,\n                            isLoggedIn: true\n                        })\n                    }).then(res => {\n                        window.location.href = \"/\"\n                    })\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n            <SignInForm \n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                name={loginFormState.name}\n                email={loginFormState.email}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignInForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\IngrePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\IngreForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\RecipeCardPage\\index.js",["132"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport RecipeCard from '../../components/RecipeCard'\n\nexport default function RecipeCardPage(props) {\n    const [recipeState, setRecipeState] = useState({\n        recipeName: \"\",\n        recipeDescript: \"\",\n        recipeImage: \"\",\n        recipeId: \"\",\n        ownerId: \"\"\n    });\n    const [ingredientState, setIngredientState] = useState({\n        item: []\n    });\n    const [directionState, setDirectionState] = useState({\n        directions: \"\",\n    });\n    const [savedRecipeState, setSavedRecipeState] = useState({\n        isSaved: false\n    })\n    const [ownerProfileState, setOwnerProfileState] = useState({\n        owner: \"\"\n    })\n \n    const { recipeName } = useParams();\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchData()\n        fetchIngreData()\n        fetchSavedRecipes()\n    }, [])\n\n    function fetchData() {\n        API.getOneRecipe(id).then(data => {\n            if (data !== null || data !== undefined) {\n                setRecipeState({\n                    recipeName: data.recipeName,\n                    recipeDescript: data.recipeDescript,\n                    recipeImage: data.recipeImage,\n                    recipeId: recipeName,\n                    ownerId: data.UserId\n                })\n                setDirectionState({\n                    directions: data.Steps[0].directions\n                })\n                API.getOneUser(data.UserId).then(data => {\n                    setOwnerProfileState({\n                        owner: data.accountName\n                    })\n                })\n            }\n        })\n    }\n\n    function fetchIngreData() {\n        API.getAllIngreForRecipe(id).then(data => {\n            if (data !== null && data !== undefined) {\n                setIngredientState({\n                    item: data\n                })\n            }\n        })\n    }\n\n    function fetchSavedRecipes() {\n        API.getOneSavedRecipe(id).then(data => {\n            if (data !== null) {\n                if (data.UserId === data.ownerId) {\n                    setSavedRecipeState({\n                        isSaved: false\n                    })\n                } else {\n                    setSavedRecipeState({\n                        ownerId: data.ownerId,\n                        isSaved: true\n                    })\n                }\n            } else {\n                setSavedRecipeState({\n                    isSaved: false\n                })\n            }\n        })\n    }\n\n    const handleSaveRecipeBtn = event => {\n        event.preventDefault()\n        if (props.profile.isLoggedIn !== false) {\n            API.saveRecipe(props.profile.token, {\n                recipeName: recipeState.recipeName,\n                ownerId: recipeState.ownerId,\n                savedByUser: props.profile.accountName,\n                recipeId: id,\n                isSaved: true\n            }).then(afterSave => {\n                window.location.href =`/profile/${props.profile.accountName}`\n            })\n        } else {\n            alert(\"Please sign in to save recipe!\")\n        }\n    }\n\n    return (\n        <div>\n            <RecipeCard\n                handleSaveRecipeBtn={handleSaveRecipeBtn}\n                //Recipe\n                recipeName={recipeState.recipeName}\n                recipeDescript={recipeState.recipeDescript}\n                recipeImage={recipeState.recipeImage}\n                ownerId={recipeState.ownerId}\n                recipeId={id}\n                // Ingredients\n                ingredients={ingredientState.item}\n                // Directions\n                directions={directionState.directions}\n                userId={props.profile.id}\n                isLoggedIn={props.profile.isLoggedIn}\n                accountName={props.profile.accountName}\n                isSaved={savedRecipeState.isSaved}\n                savedOwnerId={savedRecipeState.ownerId}\n                owner={ownerProfileState.owner}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\HomePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\RecipeViewCard\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\SignUpPage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\SignUpForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UpdateRecipePage\\index.js",["133","134"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport UpdateRecipeForm from '../../components/UpdateRecipeForm'\n\nexport default function UpdateRecipePage(props) {\n    const [recipeState, setRecipeState] = useState({\n        recipeName: \"\",\n        recipeCategory: \"\",\n        recipeDescript: \"\",\n        recipeImage: \"\"\n    })\n    const [ingredientState, setIngredientState] = useState({\n        ingredient: \"\",\n        ingredientQuant: \"\",\n        ingredientUnit: \"\"\n    })\n    const [directionState, setDirectionState] = useState({\n        directions: \"\"\n    })\n    const [recipeIngreState, setRecipeIngreState] = useState({\n        item: []\n    })\n    const [imgLoadingState, setImgLoadingState] = useState(false)\n\n    const { id } = useParams();\n\n\n    useEffect(() => {\n        fetchRecipeData()\n    }, [])\n\n    function fetchRecipeData() {\n        API.getAllIngreForRecipe(id).then(data => {\n            setRecipeIngreState({\n                item: data\n            })\n        })\n        API.getOneRecipe(id).then(data => {\n            if (data !== null && data !== undefined) {\n                setRecipeState({\n                    recipeName: data.recipeName,\n                    recipeCategory: data.recipeCategory,\n                    recipeDescript: data.recipeDescript,\n                    recipeImage: data.recipeImage,\n                    recipeId: id,\n                    ownerId: data.UserId\n                })\n                setDirectionState({\n                    directions: data.Steps[0].directions,\n                    RecipeId: data.Steps[0].RecipeId,\n                    UserId: data.Steps[0].UserId,\n                })\n            }\n        })\n    }\n\n    const handleRecipeInputChange = event => {\n        const { name, value } = event.target\n        setRecipeState({\n            ...recipeState,\n            [name]: value\n        })\n    }\n\n    const handleSelectCategory = event => {\n        let category = event.target.value\n        setRecipeState({\n            ...recipeState,\n            recipeCategory: category\n        })\n    };\n\n    const handleIngreInputChange = event => {\n        let id = event.target.id\n        const { name, value } = event.target\n        if (recipeIngreState.item !== null || recipeIngreState.item < 1) {\n            for (let i = 0; i < recipeIngreState.item.length; i++) {\n                if (recipeIngreState.item[i].id == id) {\n                    setIngredientState({\n                        ...ingredientState,\n                        [name]: value,\n                        RecipeId: id\n                    })\n                }\n            }\n        }\n    };\n\n    const handleDirectInputChange = event => {\n        const { name, value } = event.target\n        setDirectionState({\n            ...directionState,\n            [name]: value\n        })\n    };\n\n    const handleIngreSetButton = event => {\n        event.preventDefault()\n        API.updateOneIngre(\n            props.profile.token,\n            ingredientState.RecipeId,\n            ingredientState.ingredient,\n            ingredientState.ingredientQuant,\n            ingredientState.ingredientUnit,\n        )\n    }\n\n    const handleUploadImgBtn = event => {\n        event.preventDefault()\n        document.getElementById('uploadImg').click()\n    };\n    const handleUploadImg = async event => {\n        event.preventDefault()\n        const files = event.target.files\n        const data = new FormData()\n        data.append('file', files[0])\n        data.append('upload_preset', 'ummas_cb')\n        setImgLoadingState(true)\n        const res = await API.uploadImage(data)\n        const file = await res.json()\n        setRecipeState({\n            ...recipeState,\n            recipeImage: file.secure_url\n        })\n        setImgLoadingState(false)\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        API.updateRecipe(\n            props.profile.token,\n            id,\n            recipeState.recipeName,\n            recipeState.recipeDescript,\n            recipeState.recipeCategory,\n            recipeState.recipeImage,\n        )\n\n        API.updateDirection(\n            props.profile.token,\n            id,\n            directionState.directions,\n        )\n    }\n\n    return (\n        <div>\n            <UpdateRecipeForm\n                //Recipe\n                recipeId={id}\n                recipeName={recipeState.recipeName}\n                recipeCategory={recipeState.recipeCategory}\n                recipeDescript={recipeState.recipeDescript}\n                recipeImage={recipeState.recipeImage}\n                loading={imgLoadingState}\n                // Ingredients\n                ingredients={recipeIngreState.item}\n                // Directions\n                directions={directionState.directions}\n                // Input Changes\n                handleRecipeInputChange={handleRecipeInputChange}\n                handleSelectCategory={handleSelectCategory}\n                handleIngreInputChange={handleIngreInputChange}\n                handleDirectInputChange={handleDirectInputChange}\n                // Button clicks\n                handleUploadImgBtn={handleUploadImgBtn}\n                handleUploadImg={handleUploadImg}\n                handleIngreSetButton={handleIngreSetButton}\n                handleFormSubmit={handleFormSubmit}\n            />\n        </div>\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UpdateRecipeForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\UserProfile\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\LogInModal\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\EditProfilePage\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\EditProfileForm\\index.js",[],"C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\UserProfilePage\\index.js",["135"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport API from '../../utils/API'\nimport OtherUsersProfile from '../../components/OtherUsersProfile'\n\nexport default function UserProfilePage() {\n    const [userState, setUserState] = useState({\n        name: \"\",\n        accountName: \"\",\n        email: \"\",\n        profileImage: \"\",\n    })\n\n    const { accountName } = useParams();\n\n    useEffect(() => {\n        fetchUserData()\n    }, [])\n\n    function fetchUserData() {\n        API.getOneProfile(accountName).then(data => {\n            setUserState({\n                name: data.name,\n                accountName: data.accountName,\n                email: data.email,\n                profileImage: data.profileImage,\n            })\n        })\n    }\n\n    return (\n        <OtherUsersProfile\n            name={userState.name}\n            accountName={userState.accountName}\n            email={userState.email}\n            profileImage={userState.profileImage}\n        />\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\components\\OtherUsersProfile\\index.js",["136"],"import React, { useState, useEffect } from 'react'\nimport API from '../../utils/API'\nimport { Link } from \"react-router-dom\"\nimport { useParams } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport { Container } from 'react-bootstrap'\nimport { ListGroup } from 'react-bootstrap'\nimport { InputGroup } from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\n\n\nexport default function OtherUsersProfile(props) {\n    const [userRecipesState, setUserRecipesState] = useState({\n        recipe: [],\n    })\n    const [searchState, setSearchState] = useState({\n        search: \"\"\n    })\n\n    const { accountName } = useParams();\n\n    useEffect(() => {\n        fetchRecipeInfo()\n    }, [])\n\n    const handleSearchInput = event => {\n        event.preventDefault()\n        let keyword = event.target.value\n        let filtered = userRecipesState.recipe.filter(recipeObj => {\n            return (\n                recipeObj.recipeName.toLowerCase().indexOf(keyword) > -1\n            )\n        })\n        if (keyword === \"\") {\n            fetchRecipeInfo()\n        }\n        setUserRecipesState({\n            recipe: filtered\n        })\n        setSearchState({\n            ...searchState,\n            search: keyword\n        })\n    }\n\n    function fetchRecipeInfo() {\n        API.getOneProfile(accountName).then(data => {\n            setUserRecipesState({\n                recipe: data.Recipes\n            })\n        })\n    }\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center no-gutters\">\n                <Col md={3}>\n                    <Card>\n                        <Card.Img\n                            className=\"ProfileImage\"\n                            variant=\"top\"\n                            src={props.profileImage}\n                        />\n                        <Card.Body>\n                            <Card.Text>\n                                <strong>Name:</strong> {props.name}\n                            </Card.Text>\n                            <Card.Text>\n                                <strong>Email:</strong> {props.email}\n                            </Card.Text>\n                            <Card.Text>\n                                <strong>Account Name:</strong> {props.accountName}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={9}>\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>Recipes</Card.Title>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    type=\"search\"\n                                    placeholder=\"Search\"\n                                    onChange={handleSearchInput}\n                                />\n                            </InputGroup>\n                            <ListGroup variant=\"flush\">\n                                <Row lg={3} md={2} sm={2} xs={1} className=\"no-gutters\">\n                                    {userRecipesState.recipe !== \"\" ?\n                                        userRecipesState.recipe.map(item => (\n                                            <Link\n                                                className=\"RecipeListGroup\"\n                                                to={`/recipe/${item.id}`}\n                                                id={item.id}\n                                            >\n                                                {item.recipeName}\n                                            </Link>\n\n                                        ))\n                                        : null}\n                                </Row>\n                            </ListGroup>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row >\n        </Container >\n    )\n}\n","C:\\Users\\JaeShin\\code\\personal\\ummas-cb\\ummacb\\src\\pages\\CategorPage\\index.js",["137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":16},{"ruleId":"142","severity":1,"message":"148","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"149","line":11,"column":12,"nodeType":"144","messageId":"145","endLine":11,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":34,"column":8,"nodeType":"152","endLine":34,"endColumn":10,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":80,"column":49,"nodeType":"158","messageId":"159","endLine":80,"endColumn":51},{"ruleId":"150","severity":1,"message":"160","line":18,"column":8,"nodeType":"152","endLine":18,"endColumn":10,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"162","line":26,"column":8,"nodeType":"152","endLine":26,"endColumn":10,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"164","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":10,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'profileState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData', 'fetchIngreData', and 'fetchSavedRecipes'. Either include them or remove the dependency array.","ArrayExpression",["168"],"React Hook useEffect has missing dependencies: 'fetchRecipeData' and 'id'. Either include them or remove the dependency array.",["169"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'fetchRecipeInfo'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'fetchDinnerRecipeInfo'. Either include it or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [fetchData, fetchIngreData, fetchSavedRecipes]",{"range":"183","text":"184"},"Update the dependencies array to be: [fetchRecipeData, id]",{"range":"185","text":"186"},"Update the dependencies array to be: [fetchUserData]",{"range":"187","text":"188"},"Update the dependencies array to be: [fetchRecipeInfo]",{"range":"189","text":"190"},"Update the dependencies array to be: [fetchDinnerRecipeInfo]",{"range":"191","text":"192"},[949,951],"[fetchData, fetchIngreData, fetchSavedRecipes]",[914,916],"[fetchRecipeData, id]",[482,484],"[fetchUserData]",[784,786],"[fetchRecipeInfo]",[720,722],"[fetchDinnerRecipeInfo]"]